import MagicString from 'magic-string';
import { SFCScriptBlock, SFCDescriptor } from 'vue/compiler-sfc';

declare type _SFCScriptBlock = Omit<SFCScriptBlock, 'scriptAst' | 'scriptSetupAst'>;
declare type SFCCompiled = Omit<SFCDescriptor, 'script' | 'scriptSetup'> & {
    script?: _SFCScriptBlock | null;
    scriptSetup?: _SFCScriptBlock | null;
    scriptCompiled: SFCScriptBlock;
    lang: string | undefined;
};
declare const parseSFC: (code: string, id: string) => SFCCompiled;
declare const addToScript: (ctx: SFCContext) => void;

interface SFCContext {
    code: string;
    id: string;
    s: MagicString;
    sfc: SFCCompiled;
    scriptCode: {
        prepend: string;
        append: string;
    };
}
declare const initContext: (code: string, id: string) => {
    ctx: SFCContext;
    getMagicString(): MagicString | undefined;
    getSFC(): SFCCompiled | undefined;
};
declare const finalizeContext: (ctx: SFCContext) => void;

export { SFCContext as S, _SFCScriptBlock as _, SFCCompiled as a, addToScript as b, finalizeContext as f, initContext as i, parseSFC as p };
