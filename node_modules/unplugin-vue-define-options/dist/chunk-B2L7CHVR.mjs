import {
  transform
} from "./chunk-U3EJGE7C.mjs";

// src/unplugin.ts
import { createUnplugin } from "unplugin";
import { createFilter } from "@rollup/pluginutils";
import {
  finalizeContext,
  getTransformResult,
  initContext
} from "@vue-macros/common";
function resolveOption(options) {
  return {
    include: options.include || [/\.vue$/],
    exclude: options.exclude || void 0
  };
}
var unplugin_default = createUnplugin((options = {}) => {
  const opt = resolveOption(options);
  const filter = createFilter(opt.include, opt.exclude);
  const name = "unplugin-vue-define-options";
  return {
    name,
    enforce: "pre",
    transformInclude(id) {
      return filter(id);
    },
    transform(code, id) {
      try {
        const { ctx, getMagicString } = initContext(code, id);
        transform(ctx);
        finalizeContext(ctx);
        return getTransformResult(getMagicString(), id);
      } catch (err) {
        this.error(`${name} ${err}`);
      }
    }
  };
});

export {
  unplugin_default
};
