// src/index.ts
import fs from "fs-extra";
import _debug from "debug";
var debug = _debug("vite-plugin-optimize-persist");
function VitePluginOptimizePersist({ delay = 1e3, filter = () => true } = {}) {
  return {
    name: "vite-plugin-optimize-persist",
    apply: "serve",
    configureServer(server) {
      var _a, _b;
      const vitePluginPackageConfigPlugin = server.config.plugins.find((plugin) => plugin.name === "vite-plugin-package-config");
      const pkgConfig = vitePluginPackageConfigPlugin == null ? void 0 : vitePluginPackageConfigPlugin.api.options;
      if (!pkgConfig)
        throw new Error('[vite-config-optimize-persist] plugin "vite-plugin-package-config" not found, have you installed it ?');
      const { packageJsonPath, field } = pkgConfig;
      let optimizeDepsMetadata = server._ssrExternals;
      const forceIncluded = ((_b = (_a = server.config) == null ? void 0 : _a.optimizeDeps) == null ? void 0 : _b.include) || [];
      let newDeps = [];
      let timer;
      function update() {
        newDeps = Object.keys((optimizeDepsMetadata == null ? void 0 : optimizeDepsMetadata.optimized) || {}).filter((dep) => !forceIncluded.includes(dep)).filter(filter);
        debug("newDeps", newDeps);
        clearTimeout(timer);
        timer = setTimeout(write, delay);
      }
      async function write() {
        if (!newDeps.length)
          return;
        debug(`writting to ${packageJsonPath}`);
        const pkg = await fs.readJSON(packageJsonPath);
        pkg[field] = pkg[field] || {};
        const extend = pkg[field];
        extend.optimizeDeps = extend.optimizeDeps || {};
        extend.optimizeDeps.include = Array.from(/* @__PURE__ */ new Set([
          ...extend.optimizeDeps.include || [],
          ...newDeps
        ]));
        extend.optimizeDeps.include.sort();
        server.watcher.unwatch(packageJsonPath);
        await fs.writeJSON(packageJsonPath, pkg, { spaces: 2 });
        server.watcher.add(packageJsonPath);
        debug("written");
      }
      Object.defineProperty(server, "_optimizeDepsMetadata", {
        get() {
          return optimizeDepsMetadata;
        },
        set(v) {
          optimizeDepsMetadata = v;
          update();
        }
      });
    }
  };
}
var src_default = VitePluginOptimizePersist;
export {
  src_default as default
};
